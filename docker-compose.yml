version: '3.8'

services:
  web:
    build: 
      context: .
      dockerfile: Dockerfile.production
    container_name: 4kvideoreaper-api
    restart: always
    volumes:
      - downloads:/app/downloads
      - logs:/app/logs
      - ./config:/app/config
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=production
      - DOWNLOAD_DIR=/app/downloads
      - LOG_DIR=/app/logs
      - PORT=8000
      - FLASK_ENV=production
      - SECRET_KEY=${SECRET_KEY:-change_this_in_production}
      - MAX_CONCURRENT_DOWNLOADS=5
      - RATE_LIMIT_REQUESTS=20
      - RATE_LIMIT_PERIOD=60
    depends_on:
      - redis
      - sentry
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/status"]
      interval: 1m
      timeout: 10s
      retries: 3

  redis:
    image: redis:6.2-alpine
    container_name: 4kvideoreaper-redis
    restart: always
    volumes:
      - redis-data:/data
    ports:
      - "6379:6379"

  nginx:
    image: nginx:1.21-alpine
    container_name: 4kvideoreaper-nginx
    restart: always
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - downloads:/var/www/downloads:ro
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - web

  sentry:
    image: sentry:latest
    container_name: 4kvideoreaper-sentry
    volumes:
      - sentry-data:/var/lib/sentry/files
    environment:
      - SENTRY_SECRET_KEY=${SENTRY_SECRET_KEY}
      - SENTRY_POSTGRES_HOST=postgres
      - SENTRY_DB_USER=sentry
      - SENTRY_DB_PASSWORD=${SENTRY_DB_PASSWORD}
    depends_on:
      - postgres
      - redis

  postgres:
    image: postgres:13
    container_name: 4kvideoreaper-postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=sentry
      - POSTGRES_PASSWORD=${SENTRY_DB_PASSWORD}
      - POSTGRES_DB=sentry

volumes:
  downloads:
  logs:
  redis-data:
  sentry-data:
  postgres-data:

networks:
  default:
    name: 4kvideoreaper-network
